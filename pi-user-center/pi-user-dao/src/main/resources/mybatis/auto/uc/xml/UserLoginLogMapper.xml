<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pi.uc.dao.mapper.UserLoginLogMapper">
	<sql id="all_columns">
		id,create_date,update_date,version,login_date,login_area,login_city,login_device,login_source,login_channel,app_version,login_remind_flag,login_remind_summary,login_identity,user_id
	</sql>
	<sql id="updateSet">
		<if test="loginDate != null ">,login_date=#{loginDate}</if>
		<if test="loginArea != null ">,login_area=#{loginArea}</if>
		<if test="loginCity != null ">,login_city=#{loginCity}</if>
		<if test="loginDevice != null ">,login_device=#{loginDevice}</if>
		<if test="loginSource != null ">,login_source=#{loginSource}</if>
		<if test="loginChannel != null ">,login_channel=#{loginChannel}</if>
		<if test="appVersion != null ">,app_version=#{appVersion}</if>
		<if test="loginRemindFlag != null ">,login_remind_flag=#{loginRemindFlag}</if>
		<if test="loginRemindSummary != null ">,login_remind_summary=#{loginRemindSummary}</if>
		<if test="loginIdentity != null ">,login_identity=#{loginIdentity}</if>
		<if test="userId != null ">,user_id=#{userId}</if>

	</sql>
	<sql id="where">
		<where>
			<if test="id != null ">and id=#{id}</if>
			<if test="createDate != null ">and create_date=#{createDate}</if>
			<if test="updateDate != null ">and update_date=#{updateDate}</if>
			<if test="version != null ">and version=#{version}</if>
			<if test="loginDate != null ">and login_date=#{loginDate}</if>
			<if test="loginArea != null ">and login_area=#{loginArea}</if>
			<if test="loginCity != null ">and login_city=#{loginCity}</if>
			<if test="loginDevice != null ">and login_device=#{loginDevice}</if>
			<if test="loginSource != null ">and login_source=#{loginSource}</if>
			<if test="loginChannel != null ">and login_channel=#{loginChannel}</if>
			<if test="appVersion != null ">and app_version=#{appVersion}</if>
			<if test="loginRemindFlag != null ">and login_remind_flag=#{loginRemindFlag}</if>
			<if test="loginRemindSummary != null ">and login_remind_summary=#{loginRemindSummary}</if>
			<if test="loginIdentity != null ">and login_identity=#{loginIdentity}</if>
			<if test="userId != null ">and user_id=#{userId}</if>
			
		</where>
	</sql>
	<sql id="table_name">
		user_login_log
	</sql>

	<select id="findOne" resultType="UserLoginLogEntity">
		select
		<include refid="all_columns" />
		from
		<include refid="table_name" />
		where id=#{id}
	</select>
  <select id="findAll" resultType="UserLoginLogEntity">
    SELECT
    <include refid="all_columns" />
    <include refid="table_name" /> limit 1000
  </select>
  <select id="findList" resultType="UserLoginLogEntity">
    select <include refid="all_columns" /> from <include refid="table_name" /> <include refid="where" />
  </select>
  
    
	<update id="updateById" parameterType="com.pi.uc.dao.entity.UserLoginLogEntity">
		update <include refid="table_name" />
		set version=version+1, update_date=now()  <include refid="updateSet" />
		where ID=#{id} AND VERSION=#{version}
	</update>
	
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"  keyColumn="id" parameterType="com.pi.uc.dao.entity.UserLoginLogEntity">
		insert into <include refid="table_name" />
		(<include refid="all_columns" />)
		values( NULL, now(), now(), 200,#{loginDate},#{loginArea},#{loginCity},#{loginDevice},#{loginSource},#{loginChannel},#{appVersion},#{loginRemindFlag},#{loginRemindSummary},#{loginIdentity},#{userId} )
	</insert>

  <select id="count" resultType="long">
    SELECT count(1) FROM <include refid="table_name" />
  </select>
  <select id="countList" resultType="long">
    SELECT count(1) FROM <include refid="table_name" />
    <include refid="where" />
  </select>	
  <select id="getByIds" parameterType="list" resultType="UserLoginLogEntity">
    SELECT
    <include refid="all_columns" />
    FROM <include refid="table_name" />
    <where>
      ID in
      <foreach item="item" index="index" collection="list" open="("
           separator="," close=")">
        #{item}
      </foreach>
    </where>
  </select>
  
	<delete id="delete" parameterType="long">
	  DELETE FROM <include refid="table_name" />
	  WHERE ID=#{id}
	</delete>
  <delete id="deleteByIds">
    DELETE FROM <include refid="table_name" />
    <where>
      ID in
      <foreach item="item" index="index" collection="list" open="("
           separator="," close=")">
        #{item}
      </foreach>
    </where>
  </delete>
</mapper>