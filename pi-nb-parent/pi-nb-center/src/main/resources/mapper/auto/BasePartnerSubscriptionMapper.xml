<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pi.nbcenter.device.mapper.auto.BasePartnerSubscriptionMapper">
  <resultMap id="BaseResultMap" type="com.pi.nbcenter.device.entity.auto.BasePartnerSubscription">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="partner_code" jdbcType="BIGINT" property="partnerCode" />
    <result column="notify_type" jdbcType="INTEGER" property="notifyType" />
    <result column="notify_url" jdbcType="VARCHAR" property="notifyUrl" />
    <result column="notify_remark" jdbcType="VARCHAR" property="notifyRemark" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_date, update_date, version, partner_code, notify_type, notify_url, notify_remark, 
    state
  </sql>
  <select id="selectByExample" parameterType="com.pi.nbcenter.device.entity.auto.BasePartnerSubscriptionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from base_partner_subscription
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_partner_subscription
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_partner_subscription
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.pi.nbcenter.device.entity.auto.BasePartnerSubscriptionExample">
    delete from base_partner_subscription
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pi.nbcenter.device.entity.auto.BasePartnerSubscription">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into base_partner_subscription (create_date, update_date, version, 
      partner_code, notify_type, notify_url, 
      notify_remark, state)
    values (#{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, 
      #{partnerCode,jdbcType=BIGINT}, #{notifyType,jdbcType=INTEGER}, #{notifyUrl,jdbcType=VARCHAR}, 
      #{notifyRemark,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pi.nbcenter.device.entity.auto.BasePartnerSubscription">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into base_partner_subscription
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="partnerCode != null">
        partner_code,
      </if>
      <if test="notifyType != null">
        notify_type,
      </if>
      <if test="notifyUrl != null">
        notify_url,
      </if>
      <if test="notifyRemark != null">
        notify_remark,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="partnerCode != null">
        #{partnerCode,jdbcType=BIGINT},
      </if>
      <if test="notifyType != null">
        #{notifyType,jdbcType=INTEGER},
      </if>
      <if test="notifyUrl != null">
        #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="notifyRemark != null">
        #{notifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pi.nbcenter.device.entity.auto.BasePartnerSubscriptionExample" resultType="java.lang.Long">
    select count(*) from base_partner_subscription
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update base_partner_subscription
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.partnerCode != null">
        partner_code = #{record.partnerCode,jdbcType=BIGINT},
      </if>
      <if test="record.notifyType != null">
        notify_type = #{record.notifyType,jdbcType=INTEGER},
      </if>
      <if test="record.notifyUrl != null">
        notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyRemark != null">
        notify_remark = #{record.notifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update base_partner_subscription
    set id = #{record.id,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER},
      partner_code = #{record.partnerCode,jdbcType=BIGINT},
      notify_type = #{record.notifyType,jdbcType=INTEGER},
      notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      notify_remark = #{record.notifyRemark,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pi.nbcenter.device.entity.auto.BasePartnerSubscription">
    update base_partner_subscription
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="partnerCode != null">
        partner_code = #{partnerCode,jdbcType=BIGINT},
      </if>
      <if test="notifyType != null">
        notify_type = #{notifyType,jdbcType=INTEGER},
      </if>
      <if test="notifyUrl != null">
        notify_url = #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="notifyRemark != null">
        notify_remark = #{notifyRemark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pi.nbcenter.device.entity.auto.BasePartnerSubscription">
    update base_partner_subscription
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER},
      partner_code = #{partnerCode,jdbcType=BIGINT},
      notify_type = #{notifyType,jdbcType=INTEGER},
      notify_url = #{notifyUrl,jdbcType=VARCHAR},
      notify_remark = #{notifyRemark,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>